{"version":3,"file":"js/app.ffd00c29.js","mappings":"oCAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BA,EAAoBO,GAAK,KACzBC,EAAOC,QAAUT,G,mICNfU,EAAAA,EAAAA,IAAcC,G,iBCMyC,U,WAIzB,a,WAeZ,e,WAqBL,qB,iPA/CbD,EAAAA,EAAAA,IAuDYE,EAAA,M,kBAtDV,IAcM,EAdNC,EAAAA,EAAAA,IAcMC,EAAA,M,kBAZJ,IAEQ,EAFRD,EAAAA,EAAAA,IAEQE,EAAA,CAFDC,KAAK,KAAKC,GAAG,KAApB,C,kBACE,IAAuD,EAAvDJ,EAAAA,EAAAA,IAAuDK,EAAA,C,WAAhCC,EAAAA,K,qCAAAA,EAAAA,KAAIC,GAAEC,YAAY,aAAzC,0B,OAEFR,EAAAA,EAAAA,IAQME,EAAA,CARCC,KAAK,KAAKC,GAAG,KAApB,C,kBACE,IAAkE,EAAlEJ,EAAAA,EAAAA,IAAkES,EAAA,CAAvDC,QAAOC,EAAAA,eAAgBC,QAAQ,QAA1C,C,kBAAiD,IAAM,M,KAAvD,gBAEAZ,EAAAA,EAAAA,IAISS,EAAA,CAHTG,QAAQ,OACPF,QAAOC,EAAAA,eAFR,C,kBAEwB,IAE1B,M,KAJE,kB,gBAONX,EAAAA,EAAAA,IAcMC,EAAA,M,kBAbJ,IAKQ,EALRD,EAAAA,EAAAA,IAKQE,EAAA,CALDC,KAAK,KAAKC,GAAG,KAApB,C,kBACE,IAGgB,EAHhBJ,EAAAA,EAAAA,IAGgBK,EAAA,C,WAFPC,EAAAA,KAAKO,K,qCAALP,EAAAA,KAAKO,KAAIN,GAClBC,YAAY,aAFZ,0B,OAKFR,EAAAA,EAAAA,IAMME,EAAA,CANCC,KAAK,KAAKC,GAAG,KAApB,C,kBACE,IAIS,EAJTJ,EAAAA,EAAAA,IAISS,EAAA,CAHTG,QAAQ,OACPF,QAAOC,EAAAA,MAFR,C,kBAEc,IAEhB,M,KAJE,kB,gBAQNX,EAAAA,EAAAA,IAAec,IAafd,EAAAA,EAAAA,IAEee,EAAA,M,kBADF,IAAuB,gBAAlCC,EAAAA,EAAAA,IAAsEC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA3CZ,EAAAA,QAATa,K,WAAlBtB,EAAAA,EAAAA,IAAsEuB,EAAA,CAAlCC,IAAKF,EAAM,KAAOA,MAAOA,GAA7D,8B,MA/BQ,K,4GCfRtB,EAAAA,EAAAA,IAIoByB,EAAA,CAJDC,OAAA,GAAQX,QAASD,EAAAA,QAAQa,SAASlB,EAAAA,IAAE,eAAuBI,QAAOC,EAAAA,YAArF,C,kBAEE,IAAc,mBAAZc,EAAAA,MAAMZ,MAAM,MAAG,IAAAa,EAAAA,EAAAA,GAAqC,eAA9BA,EAAAA,EAAAA,GAAsB,UAAAC,EAAAA,EAAAA,IAAjBF,EAAAA,MAAMG,MAAI,Q,KAFzC,yBAUF,OACEf,KAAM,YACNgB,MAAO,CACLV,MAAOW,QAETC,OACE,MAAO,CACLrC,GAAK,OAMTsC,YAGAC,QAAQ,CACNC,aACEC,QAAQC,IAAIC,KAAKlB,MAAM,KAAK,KAAMkB,KAAKlB,MAAMN,MAC7CwB,KAAK3C,GAAK2C,KAAKlB,MAAM,KAAK,KAC1BkB,KAAKC,OAAOC,OAAO,mBAAoBF,KAAKlB,MAAM,KAAK,QAG3DqB,SAAU,CACRC,UACE,OAAOJ,KAAKC,OAAOI,MAAMC,IAAIF,W,QC/BnC,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,iBCHqD,U,GAK7ClB,EAAAA,EAAAA,GAAyB,SAAtB,sBAAkB,G,gHAR3BV,EAAAA,EAAAA,IAaM,aAZJhB,EAAAA,EAAAA,IASS6C,EAAA,CATD,gBAAc,QAAM,C,kBACnB,IAAoB,gBAA3B7B,EAAAA,EAAAA,IAIQC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAJWP,EAAAA,SAALmC,K,WAAdjD,EAAAA,EAAAA,IAIQkD,EAAA,CAJqB1B,IAAKyB,EAAIE,MAAOrC,EAAAA,UAAUmC,GAAGjC,MAA1D,C,kBACE,IAA8D,EAA9Db,EAAAA,EAAAA,IAA8DS,EAAA,CAAnDC,QAAK,GAAEC,EAAAA,aAAamC,GAAIG,KAAK,MAAxC,C,kBAA6C,IAAM,M,KAAnD,mBACAvB,EAAAA,EAAAA,GAAuB,UAAAC,EAAAA,EAAAA,IAAlBhB,EAAAA,UAAUmC,IAAC,M,KAFlB,0BAKA9C,EAAAA,EAAAA,IAEQ+C,EAAA,CAFDC,MAAM,cAAY,C,kBACvB,IAAyB,CAAzBE,K,iBAWR,OACErC,KAAM,cAKNmB,YAGAC,QAAQ,CACNkB,aAAazD,GACX2C,KAAKC,OAAOC,OAAO,mBAAoB7C,KAO3C8C,SAAU,CACRC,UACE,OAAOJ,KAAKC,OAAOI,MAAMC,IAAIF,SAE/BW,YACE,OAAOf,KAAKC,OAAOI,MAAMC,IAAIS,aCtCnC,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QJwDA,GACEvC,KAAM,aACNwC,WAAY,CACVC,UADU,EACCC,YAAWA,GAExBxB,OACE,MAAO,CACLyB,KAAO,GACPC,OAAQ,GACRC,KAAOrB,KAAKC,OAAOI,MAAMC,IAAIgB,WAIjC3B,UACEK,KAAKuB,UAEP3B,QAAS,CACP4B,gBACExB,KAAKC,OAAOC,OAAO,kBAAmB,gBAExCuB,iBACEzB,KAAKC,OAAOC,OAAO,kBAAmBF,KAAKqB,MAC3CrB,KAAKoB,OAAS,IAEhBG,SACEzB,QAAQC,IAAI,SAAUC,KAAKqB,MAC3B,IAAIK,EAAM1B,KACNM,EAAMN,KAAKC,OAAOI,MAAMC,IAAIA,IAChCA,EAAIqB,IAAI3B,KAAKqB,MAAMO,MAAMC,IACvBC,eAAeX,EAAKnC,GAAK0C,EAAIK,OAAOZ,EAAKnC,OAM7C8C,aAAaX,EAAKnC,GAChBgB,KAAKoB,OAAOpC,GAAOmC,EACnBnB,KAAKC,OAAOC,OAAO,mBAAoBF,KAAKoB,SAyB9CU,aACE,IAAIX,EAAO,CAAE5B,KAAKyC,KAAKC,MAAOzD,KAAMwB,KAAKmB,KAAK3C,YACxCwB,KAAKkC,eAAef,GAC1BnB,KAAKmB,KAAO,IAEdtB,WAAWsC,GACTrC,QAAQC,IAAIoC,KAGhBC,MAAM,CAQJd,WACEtB,KAAKqB,KAAOrB,KAAKsB,SACjBtB,KAAKuB,WAGTpB,SAAU,CAIRmB,WACE,OAAOtB,KAAKC,OAAOI,MAAMC,IAAIgB,YKjJnC,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QNDA,GACE9C,KAAM,MACNwC,WAAY,CACVqB,WAAUA,GAEZ1C,aONF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS2C,KAEpE,Q,iBCPA,MAAMjC,EAAQ,KAAM,CAClBiB,SAAU,cACVP,UAAY,GACZT,IAAK,KACLF,QAAS,KAGLmC,EAAY,CAChBC,OAAOnC,EAAOoC,GACZpC,EAAMC,IAAMmC,GAEdC,YAAYrC,EAAMoC,GAChBpC,EAAMU,UAAU0B,EAAEzD,KAAQyD,EAAEtB,KAC5BrB,QAAQC,IAAIM,EAAMU,YAEpBD,aAAaT,EAAMsC,GAEjBtC,EAAMD,QAAQjB,SAASwD,GAAKtC,EAAMD,QAAUC,EAAMD,QAAQwC,QAAOnC,GAAaA,GAAGkC,IAAMtC,EAAMD,QAAQyC,KAAKF,IAG5GG,aAAazC,EAAOsC,GAElBtC,EAAMU,UAAY4B,GAqBpBI,YAAY1C,EAAM8B,GAChB9B,EAAMiB,SAAWa,IAafa,EAAU,GAehB,OACEC,YAAY,EACZ5C,QACA2C,UACAT,aC3EF,GAAeW,EAAAA,EAAAA,IAAY,CACzB7C,MAAO,GAEP8C,QAAS,GAETZ,UAAW,GAEXS,QAAS,GAETI,QAAS,CACN9C,IAAGA,K,qFCTR,MAAM+C,EAAS,CACbC,QAAQ5B,EAAK6B,EAAO,IAClB,IAAIC,EAAQD,EAAKC,MACblD,EAAMiD,EAAKjD,IAoGfwB,eAAe2B,EAAYC,GACzB,IAAIC,EAAW,GACf,IAAIC,EAAOF,EAAEG,EAAE,KAaf,OAZA/D,QAAQC,IAAI,OAAQ6D,GACpBF,EAAE9B,MAAMkC,MAAM3C,IAEZwC,EAASd,KAAK1B,MASTwC,EAlHTH,EAAMtD,OAAO,aAAcI,GAU3BoB,EAAIqC,OAAOC,iBAAiBC,WAAanC,iBAEvChC,QAAQC,IAAI,YAAYO,EAAIqB,IAAI6B,EAAMnD,MAAMC,IAAIgB,UAAUM,aACpDtB,EAAIqB,IAAI6B,EAAMnD,MAAMC,IAAIgB,UAAUM,MAAMC,IAC5C,CAACV,EAAMnC,IAAQwE,EAAMtD,OAAO,mBAAoB,CAACiB,KAAKA,EAAMnC,IAAKA,OA8BrE0C,EAAIqC,OAAOC,iBAAiBE,gBAAkBpC,iBAC5C,IAAIqC,EAAO7D,EAAIqB,IAAI6B,EAAMnD,MAAMC,IAAIgB,UAAUK,IAAI6B,EAAMnD,MAAM+D,KAAKtF,MAAME,KAAK2C,IAAI,SACjF,UAAW,MAAM+B,KAAKF,EAAMnD,MAAM+D,KAAKC,aAC9BX,EAAE,YACT5D,QAAQwE,MAAM,wCAAwCZ,EAAErG,GAAIqG,GAC5DS,EAAKI,IAAIb,IAKbhC,EAAIqC,OAAOC,iBAAiB9B,eAAiBJ,eAAeX,GAC1DrB,QAAQC,IAAIyD,EAAMnD,MAAMC,IAAIgB,UAC5B,IAAI6C,EAAO7D,EAAIqB,IAAI6B,EAAMnD,MAAMC,IAAIgB,UACnC6C,EAAKI,IAAIpD,IAQXO,EAAIqC,OAAOC,iBAAiBQ,QAAU1C,eAAe2C,GACnD3E,QAAQC,IAAIyD,EAAMnD,MAAMC,IAAIgB,SAAUmD,GACtCnE,EAAIqB,IAAI6B,EAAMnD,MAAMC,IAAIgB,UAAUiD,IAAIE,IAGxC/C,EAAIqC,OAAOC,iBAAiBU,YAAc5C,iBAExC,IAAIR,EAAWkC,EAAMnD,MAAMC,IAAIgB,SAC/BxB,QAAQC,IAAIuB,GACZxB,QAAQC,IAAI,qBAcZ,IAAIoB,EAAOb,EAAIqB,IAAIL,GACnBxB,QAAQC,IAAI,WAAYoB,GACxB,IAAIwD,QAAclB,EAAYtC,GAM9B,OALArB,QAAQC,IAAI,QAAS4E,GAErBrE,EAAIqB,IAAIL,GAAUsD,MAAMC,IACtB/E,QAAQC,IAAI,MAAO8E,MAEdF,GAmFXjD,EAAIqC,OAAOC,iBAAiBc,WAAahD,eAAepC,GACpDI,QAAQC,IAAI,QAASyD,EAAMnD,MAAMC,IAAIxB,OACrC,IAAIiG,EAAavB,EAAMnD,MAAMC,IAAIxB,MAAMN,KACvCsB,QAAQC,IAAIL,EAAMA,EAAKsF,MAAOtF,EAAKuF,QACnC,IAAIR,EAAS/E,EAAKuF,OAAOR,cAClBA,EAAOS,cACPT,EAAOU,WACd,IAAIC,EAAc9E,EAAIqB,IAAIoD,GAAYR,IAAIE,GAEtCY,EAAU3F,EAAKuF,OAAOI,eACnBA,EAAQH,cACRG,EAAQF,WAEf,IAAInG,EAAMU,EAAKuF,OAAOK,KAAKC,MAC3BF,EAAQrG,GAAOoG,EAGftF,QAAQC,IAAIsF,GAEd/E,EAAIqB,IAAIoD,GAAYR,IAAIc,MAsCN,qBAAXG,QAA0BA,OAAOC,KAC1CD,OAAOC,IAAIC,IAAIrC,GAGjB,QCrOA,IAAIsC,EAAiF,CACnF,kCACA,2CAIF7F,QAAQC,IAAI6F,aAAsB,QAASD,GACpC,MAAMrF,EAAMuF,IAAI,CACrBF,MAAOA,EACPG,cAAa,IAEfhG,QAAQC,IAAIgG,IAAKzF,GAIjB,MAAMoB,GAAMsE,EAAAA,EAAAA,IAAUC,GACtBvE,EAAIgE,IAAIQ,EAAW,CAAC1C,MAAOA,EAAOlD,IAAKA,IACvCoB,EAAIgE,IAAIlC,GACR9B,EAAIgE,IAAIS,EAAAA,IACPC,MAAM,UCrCHC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAajJ,QAGrB,IAAID,EAAS+I,EAAyBE,GAAY,CACjDlJ,GAAIkJ,EACJG,QAAQ,EACRnJ,QAAS,IAUV,OANAoJ,EAAoBJ,GAAUK,KAAKtJ,EAAOC,QAASD,EAAQA,EAAOC,QAAS+I,GAG3EhJ,EAAOoJ,QAAS,EAGTpJ,EAAOC,QAIf+I,EAAoBO,EAAIF,E,WC5BxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IAAK,CACrCL,EAAWH,EAASQ,GAAG,GACvBJ,EAAKJ,EAASQ,GAAG,GACjBH,EAAWL,EAASQ,GAAG,GAE3B,IAJA,IAGIE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAa1H,OAAOtC,KAAKmJ,EAAoBS,GAAGW,OAAM,SAAS1I,GAAO,OAAOsH,EAAoBS,EAAE/H,GAAKiI,EAASQ,OAC3JR,EAASU,OAAOF,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbV,EAASa,OAAOL,IAAK,GACrB,IAAInF,EAAI+E,SACET,IAANtE,IAAiB6E,EAAS7E,IAGhC,OAAO6E,EAzBNG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASS,OAAQD,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,I,cCJ/Bb,EAAoB5C,EAAI,SAASpG,GAChC,IAAIsK,EAAStK,GAAUA,EAAOuK,WAC7B,WAAa,OAAOvK,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADAgJ,EAAoBwB,EAAEF,EAAQ,CAAEnH,EAAGmH,IAC5BA,G,cCLRtB,EAAoBwB,EAAI,SAASvK,EAASwK,GACzC,IAAI,IAAI/I,KAAO+I,EACXzB,EAAoB0B,EAAED,EAAY/I,KAASsH,EAAoB0B,EAAEzK,EAASyB,IAC5ES,OAAOwI,eAAe1K,EAASyB,EAAK,CAAEkJ,YAAY,EAAMvG,IAAKoG,EAAW/I,M,cCJ3EsH,EAAoB7D,EAAI,WACvB,GAA0B,kBAAf0F,WAAyB,OAAOA,WAC3C,IACC,OAAOnI,MAAQ,IAAIoI,SAAS,cAAb,GACd,MAAOpL,GACR,GAAsB,kBAAXwI,OAAqB,OAAOA,QALjB,G,cCAxBc,EAAoB0B,EAAI,SAASK,EAAKC,GAAQ,OAAO7I,OAAO8I,UAAUC,eAAe5B,KAAKyB,EAAKC,I,cCC/FhC,EAAoBnE,EAAI,SAAS5E,GACX,qBAAXkL,QAA0BA,OAAOC,aAC1CjJ,OAAOwI,eAAe1K,EAASkL,OAAOC,YAAa,CAAE1D,MAAO,WAE7DvF,OAAOwI,eAAe1K,EAAS,aAAc,CAAEyH,OAAO,K,cCLvDsB,EAAoBqC,IAAM,SAASrL,GAGlC,OAFAA,EAAOsL,MAAQ,GACVtL,EAAOuL,WAAUvL,EAAOuL,SAAW,IACjCvL,G,cCER,IAAIwL,EAAkB,CACrB,IAAK,GAaNxC,EAAoBS,EAAEU,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4BvJ,GAC/D,IAKI6G,EAAUwC,EALV9B,EAAWvH,EAAK,GAChBwJ,EAAcxJ,EAAK,GACnByJ,EAAUzJ,EAAK,GAGI4H,EAAI,EAC3B,GAAGL,EAASmC,MAAK,SAAS/L,GAAM,OAA+B,IAAxByL,EAAgBzL,MAAe,CACrE,IAAIkJ,KAAY2C,EACZ5C,EAAoB0B,EAAEkB,EAAa3C,KACrCD,EAAoBO,EAAEN,GAAY2C,EAAY3C,IAGhD,GAAG4C,EAAS,IAAInC,EAASmC,EAAQ7C,GAGlC,IADG2C,GAA4BA,EAA2BvJ,GACrD4H,EAAIL,EAASM,OAAQD,IACzByB,EAAU9B,EAASK,GAChBhB,EAAoB0B,EAAEc,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOzC,EAAoBS,EAAEC,IAG1BqC,EAAqBC,KAAK,uBAAyBA,KAAK,wBAA0B,GACtFD,EAAmBE,QAAQP,EAAqBQ,KAAK,KAAM,IAC3DH,EAAmBxG,KAAOmG,EAAqBQ,KAAK,KAAMH,EAAmBxG,KAAK2G,KAAKH,I,GC/CvF,IAAII,EAAsBnD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,SAC1GmD,EAAsBnD,EAAoBS,EAAE0C,I","sources":["webpack://gunmind/./node_modules/gun/ sync","webpack://gunmind/./src/App.vue","webpack://gunmind/./src/components/HelloWorld.vue","webpack://gunmind/./src/components/BrainView.vue","webpack://gunmind/./src/components/BrainView.vue?81d6","webpack://gunmind/./src/components/ActivesView.vue","webpack://gunmind/./src/components/ActivesView.vue?3b23","webpack://gunmind/./src/components/HelloWorld.vue?bd04","webpack://gunmind/./src/App.vue?7ccd","webpack://gunmind/./src/store/modules/gun.js","webpack://gunmind/./src/store/index.js","webpack://gunmind/./src/plugins/gun-plugin.js","webpack://gunmind/./src/main.js","webpack://gunmind/webpack/bootstrap","webpack://gunmind/webpack/runtime/chunk loaded","webpack://gunmind/webpack/runtime/compat get default export","webpack://gunmind/webpack/runtime/define property getters","webpack://gunmind/webpack/runtime/global","webpack://gunmind/webpack/runtime/hasOwnProperty shorthand","webpack://gunmind/webpack/runtime/make namespace object","webpack://gunmind/webpack/runtime/node module decorator","webpack://gunmind/webpack/runtime/jsonp chunk loading","webpack://gunmind/webpack/startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1661;\nmodule.exports = webpackEmptyContext;","<template>\n  <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n  <HelloWorld />\n</template>\n\n<script>\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  created(){\n    // this.$gunListen()\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <b-container>\n    <b-row>\n\n      <b-col cols=\"12\" md=\"9\" >\n        <b-form-input v-model=\"root\" placeholder=\"workspace\" />\n      </b-col>\n      <b-col cols=\"12\" md=\"3\" >\n        <b-button @click=\"updateRootNode\" variant=\"info\">Change</b-button>\n\n        <b-button\n        variant=\"info\"\n        @click=\"resetRootNode\" >\n        Default\n      </b-button>\n    </b-col>\n  </b-row>\n  <b-row>\n    <b-col cols=\"12\" md=\"9\" >\n      <b-form-input\n      v-model=\"node.name\"\n      placeholder=\"Node name\"\n      ></b-form-input>\n    </b-col>\n    <b-col cols=\"12\" md=\"3\" >\n      <b-button\n      variant=\"info\"\n      @click=\"save\">\n      Add Brain\n    </b-button>\n  </b-col>\n</b-row>\n\n<ActivesView />\n\n<!-- {{Object.values(brains)}} -->\n<!-- <b-row>\n<b-table\n:items=\"Object.values(brains)\"\nselectable\n@row-selected=\"onRowSelected\"\n@event=\"\">\n</b-table>\n\n</b-row> -->\n\n<b-list-group>\n  <BrainView v-for=\"brain in brains\" :key=\"brain['#']\" :brain=\"brain\" />\n</b-list-group>\n\n\n\n\n\nworkspaces boot\n\n</b-container>\n</template>\n\n<script>\nimport BrainView from '@/components/BrainView.vue'\nimport ActivesView from '@/components/ActivesView.vue'\n\nexport default {\n  name: 'HelloWorld',\n  components: {\n    BrainView, ActivesView\n  },\n  data(){\n    return {\n      node:  {},\n      brains: {},\n      root : this.$store.state.gun.rootNode,\n\n    }\n  },\n  created(){\n    this.listen()\n  },\n  methods: {\n    resetRootNode(){\n      this.$store.commit('gun/setRootNode', \"test-brains\")\n    },\n    updateRootNode(){\n      this.$store.commit('gun/setRootNode', this.root)\n      this.brains = {}\n    },\n    listen(){\n      console.log(\"listen\", this.root)\n      let app = this\n      let gun = this.$store.state.gun.gun\n      gun.get(this.root).map().on(\n        async function(node,key){app.update(node,key) }\n        // let n = JSON.parse(JSON.stringify(node))\n        // app.$store.commit('gun/updateBrain', {key:key, node:n})\n        //  }\n      )\n    },\n    async update(node,key){\n      this.brains[key] = node\n      this.$store.commit('gun/setGunBrains', this.brains)\n      //console.log(this.brains)\n      // let brains = JSON.parse(JSON.stringify(this.brains))\n      // // console.log(node,key)\n      // // async function(node, key)\n      // // // store.commit('gun/addGunBrains', {node:node, key: key}\n      // // {\n      //   //  console.log(node, key)\n      //   // let brains = JSON.parse(JSON.stringify(this.brains))\n      //   console.log(brains)\n      // let n = JSON.parse(JSON.stringify(node['_']['>'])) //Object.assign({},node['_']['>'])\n      // n.id = key\n      // console.log(n)\n      // let index = this.brains.findIndex(x => {x.id == key})\n      // console.log(index, this.brains.length)\n      // if (index == -1){\n      //   this.brains[key] = n\n      // }\n      //else{\n      //   brains[index] = n\n      // }\n      // this.brains = brains\n\n      // }\n    },\n    async save(){\n      let node = { date:Date.now(), name: this.node.name}\n      await this.$saveNodeToGun(node)\n      this.node = {}\n    },\n    onSelected(r){\n      console.log(r)\n    }\n  },\n  watch:{\n    // selectedItem(){\n    //   console.log(\"selected\", this.selectedItem)\n    // },\n    // brains(){\n    //   console.log(this.brains)\n    //   this.$store.commit('gun/setGunBrains', this.brains)\n    // },\n    rootNode(){\n      this.root = this.rootNode\n      this.listen()\n    }\n  },\n  computed: {\n    // gunBrains() {\n    //   return this.$store.state.gun.gunBrains\n    // },\n    rootNode(){\n      return this.$store.state.gun.rootNode\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <b-list-group-item button :variant=\"actives.includes(id) ? 'info' : 'light'\" @click=\"onSelected\">\n    <!-- {{actives.includes(id)}} -->\n    {{brain.name}} , <small><i>{{brain.date}} </i></small>\n    <!-- <small><i>{{brain}}</i></small> -->\n  </b-list-group-item>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'BrainView',\n  props: {\n    brain: Object\n  },\n  data(){\n    return {\n      id : null\n    }\n  },\n  // components: {\n  //   HelloWorld\n  // },\n  created(){\n    // this.$gunListen()\n  },\n  methods:{\n    onSelected(){\n      console.log(this.brain['_']['#'], this.brain.name)\n      this.id = this.brain['_']['#']\n      this.$store.commit('gun/toggleActive', this.brain['_']['#'])\n    }\n  },\n  computed: {\n    actives() {\n      return this.$store.state.gun.actives\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./BrainView.vue?vue&type=template&id=fad54f96\"\nimport script from \"./BrainView.vue?vue&type=script&lang=js\"\nexport * from \"./BrainView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/dfaveris01/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <b-tabs content-class=\"mt-3\">\n      <b-tab v-for=\"a in actives\" :key=\"a\" :title=\"gunBrains[a].name\">\n        <b-button @click=\"toggleActive(a)\" size=\"sm\">remove</b-button>\n        <p>{{gunBrains[a]}}</p>\n\n      </b-tab>\n      <b-tab title=\"Workspaces\">\n        <p>I'm the second tab</p>\n      </b-tab>\n    </b-tabs>\n    <!-- {{ gunBrains}} -->\n    <!-- {{actives}} -->\n  </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'ActivesView',\n  \n  // components: {\n  //   HelloWorld\n  // },\n  created(){\n    // this.$gunListen()\n  },\n  methods:{\n    toggleActive(id){\n      this.$store.commit('gun/toggleActive', id)\n    }\n    // onSelected(){\n    //   console.log(this.brain['_']['#'], this.brain.name)\n    //   this.$store.commit('gun/toggleActive', this.brain['_']['#'])\n    // }\n  },\n  computed: {\n    actives() {\n      return this.$store.state.gun.actives\n    },\n    gunBrains() {\n      return this.$store.state.gun.gunBrains\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./ActivesView.vue?vue&type=template&id=1ba6bc4e\"\nimport script from \"./ActivesView.vue?vue&type=script&lang=js\"\nexport * from \"./ActivesView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/dfaveris01/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HelloWorld.vue?vue&type=template&id=16a1fb68&scoped=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=16a1fb68&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/dfaveris01/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16a1fb68\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2f2b50ad\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2f2b50ad&lang=css\"\n\nimport exportComponent from \"/home/dfaveris01/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import Vue from 'vue'\n\nconst state = () => ({\n  rootNode: \"test-brains\",\n  gunBrains : [],\n  gun: null,\n  actives: []\n})\n\nconst mutations = {\n  setGun(state, g){\n    state.gun = g\n  },\n  updateBrain(state,g){\n    state.gunBrains[g.key] =  g.node\n    console.log(state.gunBrains)\n  },\n  toggleActive(state,b){\n    //  console.log(b)\n    state.actives.includes(b) ? state.actives = state.actives.filter(a => {return a!=b}) : state.actives.push(b)\n    //  console.log(state.actives)\n  },\n  setGunBrains(state, b){\n    //  console.log(b)\n    state.gunBrains = b\n  },\n  // async addGunBrains(state, b){\n  // //  console.log(b)\n  //   const index = state.gunBrains.findIndex(object => object.key == b.key);\n  //   //console.log(index)\n  //   if (index === -1) {\n  //     let br = Object.assign({},b.node)\n  //     br.key = b.key\n  //      state.gunBrains.push(br)\n  //     // await Vue.prototype.$gun.get(b.key).open(async (doc) => {\n  //     //   console.log(\"doc\",b.key,  doc)\n  //     //   doc.key = b.key\n  //     //   await state.gunBrains.push(doc)\n  //     // })\n  //\n  //   }\n  //   console.log(state.gunBrains)\n  //\n  //\n  // },\n  setRootNode(state,r){\n    state.rootNode = r\n  }\n  // setPod(state, p){\n  //   console.log(\"pod\",p)\n  //   state.pod = p\n  // },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","import { createStore } from 'vuex'\nimport gun from './modules/gun'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n     gun\n  }\n})\n","// import * as sc from '@inrupt/solid-client-authn-browser'\n// gun JSON https://gist.github.com/rosko/57ab2083ee4adf2f078d4d76851d9dc6\n// import { Dfs } from '@/api/dfs';\n\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n    let gun = opts.gun\n    store.commit('gun/setGun', gun)\n    //  console.log(store)\n\n\n    // Vue.prototype.$gunSearch = async function(/*'brains')*/){\n    //   console.log(Dfs)\n    //   let dfs = new Dfs(Vue.prototype.$gun)\n    //   dfs.search(store.state.gun.rootNode, 'name')\n    // }\n\n    app.config.globalProperties.$gunListen = async function(){\n      // let gunBrains = []\n      console.log(\"Map\",await gun.get(store.state.gun.rootNode).map())\n      await gun.get(store.state.gun.rootNode).map().on(\n        (node, key) => store.commit('gun/addGunBrains', {node:node, key: key})\n      )\n      //   function(node,key) {\n      //   console.log(node,key)\n      //   Vue.prototype.$gun.get(key).open((doc) => {\n      //   //console.log(\"doc\",key,  doc)\n      //   doc.key = key\n      //   gunBrains.push(doc)\n      // //  gunBrains[key] = doc\n      //   console.log(gunBrains)\n      //     store.commit('gun/setGunBrains', gunBrains)\n      //   });\n    }\n\n\n\n    // await Vue.prototype.$gun.get('neurones').map().on(function(node,key) {\n    // //  console.log(node,key)\n    // let gunNeurones = []\n    //   Vue.prototype.$gun.get(key).open((doc) => {\n    //   //console.log(\"doc\",key,  doc)\n    //   doc.key = key\n    //   gunNeurones.push(doc)\n    // //  gunBrains[key] = doc\n    //   console.log(gunNeurones)\n    //     //store.commit('gun/setGunBrains', gunBrains)\n    //   });\n    // })\n\n    // }\n    app.config.globalProperties.$saveBrainToGun = async function(){\n      let path = gun.get(store.state.gun.rootNode).get(store.state.core.brain.key).get('nodes')\n      for await (const n of store.state.core.nodes){\n        delete n['@context']\n        console.error(\"must not be used , use store.rootNode\",n.id, n)\n        path.set(n)\n\n      }\n    }\n\n    app.config.globalProperties.$saveNodeToGun = async function(node){\n      console.log(store.state.gun.rootNode)\n      let path = gun.get(store.state.gun.rootNode)\n      path.set(node)\n      //console.log(\"Brain\", store.state.core.brain, store.state.core.galaxy, store.state.core.galaxy.worlds, node)\n      // if (store.state.brain != null){\n      //\n      // }\n\n    }\n\n    app.config.globalProperties.$gunSet = async function(object){\n      console.log(store.state.gun.rootNode, object)\n      gun.get(store.state.gun.rootNode).set(object)\n    }\n\n    app.config.globalProperties.$gunExplore = async function(){\n      // inspiration https://github.com/Stefdv/gun-ui-graph/blob/master/gun-ui-graph.html\n      let rootNode = store.state.gun.rootNode\n      console.log(rootNode)\n      console.log('build gun._.graph')\n      // var self = this\n      // function each(node) {\n      //   console.log(node)\n      //   //self._processGunNode(node)\n      // }\n      // function ended(collection) {\n      //   console.log('Done mapping over:', collection);\n      //   //self._initCy()\n      //\n      //\n      //   self._mapNodes()\n      // }\n\n      let node = gun.get(rootNode)//.valMapEnd(each,ended)\n      console.log(\"Gun Node\", node)\n      let graph = await processNode(node)\n      console.log(\"graph\", graph)\n    //  console.log(Vue.prototype.$gun)\n      gun.get(rootNode).open((doc) => {\n        console.log(\"doc\", doc)\n      });\n      return graph\n\n    }\n    async function processNode(n){\n      let gunNodes = []\n      var soul = n._['#'];\n      console.log(\"soul\", soul)\n      n.map().once((node) => {\n        //console.log(key, node)\n        gunNodes.push(node)\n        // add results straight to the Vue component state\n        // and get updates when nodes are updated by GUN\n        // this.todos[key] = node;\n        //  console.log(this.todos)\n      });\n      //let isSet = await _isSet(soul)\n      //console.log(isSet)\n      // console.log(gunNodes)\n      return gunNodes\n    }\n\n\n    // Vue.prototype.$createBrain = async function(brain){\n    //\n    //   console.log(\"creation\",brain)\n    //   let brains = []\n    //   let rootNode = null\n    //   switch (brain.world) {\n    //     case \"gun\":\n    //     if (brain.privacy == \"user\"){\n    //       rootNode = Vue.prototype.$gun.user().get('brains')\n    //     }else {\n    //       rootNode = Vue.prototype.$gun.get('brains')\n    //     }\n    //\n    //\n    //\n    //     rootNode.map().on((node, key) => {\n    //       console.log(key, node)\n    //       brains.push({key: key, node: node})\n    //       // add results straight to the Vue component state\n    //       // and get updates when nodes are updated by GUN\n    //       // this.todos[key] = node;\n    //       //  console.log(this.todos)\n    //     });\n    //\n    //     rootNode.set({name: brain.name, created: Date.now(), type: brain.type})\n    //\n    //\n    //     brain.brains = brains\n    //     console.log(\"brains\",brain.brains)\n    //\n    //\n    //\n    //     break;\n    //     default:\n    //     console.log(\"todo\")\n    //   }\n    //\n    //   //store.commit('app/setBrain', brain)\n    //   return brain\n    // }\n\n    // Vue.prototype.$gunGet = async function(brain){\n    //   let gunNodes = []\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     gunNodes.push({key: key, node: node})\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(gunNodes)\n    //   brain.gunNodes = gunNodes\n    //   console.log(brain)\n    //   store.commit('app/setBrain', brain)\n    //   //  Vue.prototype.$listenNeurones(brain)\n    //   return brain\n    // }\n\n\n\n  app.config.globalProperties.$saveToGun = async function(data){\n      console.log(\"brain\", store.state.gun.brain)\n      let brain_name = store.state.gun.brain.name\n      console.log(data, data.value, data.triple)\n      let object = data.triple.object\n      delete object.__ob__\n      delete object.__threeObj\n      let objectNode  = gun.get(brain_name).set(object)\n\n      let subject = data.triple.subject\n      delete subject.__ob__\n      delete subject.__threeObj\n\n      let key = data.triple.edge.label\n      subject[key] = objectNode\n\n\n      console.log(subject)\n\n    gun.get(brain_name).set(subject)\n\n    }\n\n    // Vue.prototype.$listenNeurones = async function(brain){\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(\"ready to hear neurones\")\n    // }\n\n\n\n\n    // async function _isSet(ref){\n    //   Vue.prototype.$gun.get(ref).once(function(node){\n    //     let set = true\n    //     let iterated = false\n    //     console.log(node)\n    //     // Vue.prototype.$gun.node.is(node, function(value, field){\n    //     //   console.log(field)\n    //     //   iterated = true\n    //     //   if(!Vue.prototype.$gun.val.rel.is(value)){\n    //     //     set = false\n    //     //   }\n    //     // })\n    //     return {set: set, iterated: iterated}\n    //   })\n    // }\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import { createApp } from 'vue'\nimport App from './App.vue'\n//import './registerServiceWorker'\nimport BootstrapVue3 from 'bootstrap-vue-3'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue-3/dist/bootstrap-vue-3.css'\nimport store from './store'\n\nimport Gun from 'gun/gun'\nimport SEA from 'gun/sea.js'\nimport 'gun/lib/radix'\nimport 'gun/lib/radisk'\nimport 'gun/lib/store'\nimport 'gun/lib/rindexed'\nimport 'gun/lib/webrtc'\nimport 'gun/nts'\n\n\n\nlet peers = process.env.NODE_ENV === 'development' ? ['http://localhost:8090/gun'] : [\n  'https://spogg.herokuapp.com/gun',\n  'https://gun-manhattan.herokuapp.com/gun',\n  // 'http://gunjs.herokuapp.com/gun/'\n]\n\nconsole.log(process.env.NODE_ENV, \"ppers\", peers)\nexport const gun = Gun({\n  peers: peers,// run gun-starter-app on port 9090,\n  localStorage:false\n})\nconsole.log(SEA, gun)\n\nimport GunPlugin from './plugins/gun-plugin';\n\nconst app = createApp(App)\napp.use(GunPlugin, {store: store, gun: gun});\napp.use(store)\napp.use(BootstrapVue3)\n.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgunmind\"] = self[\"webpackChunkgunmind\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3113); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","_createBlock","_component_HelloWorld","_component_b_container","_createVNode","_component_b_row","_component_b_col","cols","md","_component_b_form_input","$data","$event","placeholder","_component_b_button","onClick","$options","variant","name","_component_ActivesView","_component_b_list_group","_createElementBlock","_Fragment","_renderList","brain","_component_BrainView","key","_component_b_list_group_item","button","includes","$props","_createElementVNode","_toDisplayString","date","props","Object","data","created","methods","onSelected","console","log","this","$store","commit","computed","actives","state","gun","__exports__","_component_b_tabs","a","_component_b_tab","title","size","_hoisted_2","toggleActive","gunBrains","components","BrainView","ActivesView","node","brains","root","rootNode","listen","resetRootNode","updateRootNode","app","get","map","on","async","update","Date","now","$saveNodeToGun","r","watch","HelloWorld","render","mutations","setGun","g","updateBrain","b","filter","push","setGunBrains","setRootNode","actions","namespaced","createStore","getters","modules","plugin","install","opts","store","processNode","n","gunNodes","soul","_","once","config","globalProperties","$gunListen","$saveBrainToGun","path","core","nodes","error","set","$gunSet","object","$gunExplore","graph","open","doc","$saveToGun","brain_name","value","triple","__ob__","__threeObj","objectNode","subject","edge","label","window","Vue","use","peers","process","Gun","localStorage","SEA","createApp","App","GunPlugin","BootstrapVue3","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}