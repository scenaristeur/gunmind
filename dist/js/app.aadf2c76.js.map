{"version":3,"file":"js/app.aadf2c76.js","mappings":"oCAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BA,EAAoBO,GAAK,KACzBC,EAAOC,QAAUT,G,0gSCPfU,EAAAA,EAAAA,GAA4C,OAAvCC,IAAI,WAAWC,IAAAC,GAApB,S,4FAAAC,GACAC,EAAAA,EAAAA,IAAcC,IAAd,I,uBCDKC,MAAM,S,0CAAXC,EAAAA,EAAAA,IAIM,MAJN,EAIM,WAHJR,EAAAA,EAAAA,GAA6B,S,qCAAbS,EAAAA,KAAKC,KAAIC,IAAzB,iBAAgBF,EAAAA,KAAKC,SACrBV,EAAAA,EAAAA,GAAmC,UAA1BY,QAAK,oBAAEC,EAAAA,MAAAA,EAAAA,QAAAA,KAAM,SAElB,QAF+B,OACjCC,EAAAA,EAAAA,IAAGL,EAAAA,QAAS,MAChB,KAIF,OACEC,KAAM,aACNK,MAAO,CACLC,IAAKC,QAEPC,OACE,MAAO,CACLC,KAAO,GACPC,OAAQ,KAGZC,UACE,IAAIC,EAAMC,KACNC,EAAMD,KAAKE,OAAOC,MAAMF,IAAIA,IAC/BA,EAAIG,IAAIJ,KAAKE,OAAOC,MAAMF,IAAII,UAAUC,MAAMC,IAC7C,CAACX,EAAMY,KAENC,QAAQC,IAAId,EAAMY,GACnBT,EAAIF,OAAOc,KAAKf,OAItBgB,QAAS,CACPC,aACE,IAAIjB,EAAO,CAAEkB,KAAKC,KAAKC,MAAO7B,KAAMa,KAAKJ,KAAKT,YACxCa,KAAKiB,eAAerB,GAC1BI,KAAKJ,KAAO,KAGhBsB,MAAM,CACJC,YACEV,QAAQC,IAAIV,KAAKmB,aAGrBC,SAAU,CACRD,YACE,OAAOnB,KAAKE,OAAOC,MAAMF,IAAIkB,a,QCtCjC,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QFDA,GACElC,KAAM,MACNmC,WAAY,CACVC,WAAUA,GAEZzB,aGNF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS0B,KAEpE,Q,WCJEC,EAAAA,EAAAA,GAAU,6BAA2C,CACnDC,QACEjB,QAAQC,IACN,uGAIJiB,aACElB,QAAQC,IAAI,wCAEdkB,SACEnB,QAAQC,IAAI,6CAEdmB,cACEpB,QAAQC,IAAI,gCAEdoB,UACErB,QAAQC,IAAI,8CAEdqB,UACEtB,QAAQC,IAAI,kEAEdsB,MAAOA,GACLvB,QAAQuB,MAAM,4CAA6CA,M,YC1BjE,MAAM7B,EAAQ,KAAM,CAClBE,SAAU,cACVc,UAAY,GACZlB,IAAK,OAGDgC,EAAY,CAChBC,OAAO/B,EAAOgC,GACZhC,EAAMF,IAAMkC,GAEdC,aAAajC,EAAOkC,GAClBlC,EAAMgB,UAAYkB,GAEpBxB,mBAAmBV,EAAOkC,GAExB,MAAMC,EAAQnC,EAAMgB,UAAUoB,WAAUC,GAAUA,EAAOhC,KAAO6B,EAAE7B,MAElE,IAAe,IAAX8B,EAAc,CAChB,IAAIG,EAAKC,OAAOC,OAAO,GAAGN,EAAEzC,MAC5B6C,EAAGjC,IAAM6B,EAAE7B,IACVL,EAAMgB,UAAUR,KAAK8B,GAQxBhC,QAAQC,IAAIP,EAAMgB,YAIpByB,YAAYzC,EAAM0C,GAChB1C,EAAME,SAAWwC,IAafC,EAAU,GAehB,OACEC,YAAY,EACZ5C,QACA2C,UACAb,aChEF,GAAee,EAAAA,EAAAA,IAAY,CACzB7C,MAAO,GAEP8C,QAAS,GAEThB,UAAW,GAEXa,QAAS,GAETI,QAAS,CACNjD,IAAGA,K,qFCTR,MAAMkD,EAAS,CACbC,QAAQrD,EAAKsD,EAAO,IAClB,IAAIC,EAAQD,EAAKC,MACbrD,EAAMoD,EAAKpD,IAmGfY,eAAe0C,EAAYC,GACzB,IAAIC,EAAW,GACf,IAAIC,EAAOF,EAAEG,EAAE,KAaf,OAZAlD,QAAQC,IAAI,OAAQgD,GACpBF,EAAElD,MAAMsD,MAAMhE,IAEZ6D,EAAS9C,KAAKf,MAST6D,EAjHTH,EAAMO,OAAO,aAAc5D,GAU3BF,EAAI+D,OAAOC,iBAAiBC,WAAanD,iBAEvCJ,QAAQC,IAAI,YAAYT,EAAIG,IAAIkD,EAAMnD,MAAMF,IAAII,UAAUC,aACpDL,EAAIG,IAAIkD,EAAMnD,MAAMF,IAAII,UAAUC,MAAMC,IAC5C,CAACX,EAAMY,IAAQ8C,EAAMO,OAAO,mBAAoB,CAACjE,KAAKA,EAAMY,IAAKA,OA8BrET,EAAI+D,OAAOC,iBAAiBE,gBAAkBpD,iBAC5C,IAAIqD,EAAOjE,EAAIG,IAAIkD,EAAMnD,MAAMF,IAAII,UAAUD,IAAIkD,EAAMnD,MAAMgE,KAAKC,MAAM5D,KAAKJ,IAAI,SACjF,UAAW,MAAMoD,KAAKF,EAAMnD,MAAMgE,KAAKE,aAC9Bb,EAAE,YACT/C,QAAQuB,MAAM,wCAAwCwB,EAAElF,GAAIkF,GAC5DU,EAAKI,IAAId,IAKbzD,EAAI+D,OAAOC,iBAAiB9C,eAAiBJ,eAAejB,GAC1D,IAAIsE,EAAOjE,EAAIG,IAAIkD,EAAMnD,MAAMF,IAAII,UACnC6D,EAAKI,IAAI1E,IAQXG,EAAI+D,OAAOC,iBAAiBQ,QAAU1D,eAAe2B,GACnD/B,QAAQC,IAAI4C,EAAMnD,MAAMF,IAAII,SAAUmC,GACtCvC,EAAIG,IAAIkD,EAAMnD,MAAMF,IAAII,UAAUiE,IAAI9B,IAGxCzC,EAAI+D,OAAOC,iBAAiBS,YAAc3D,iBAExC,IAAIR,EAAWiD,EAAMnD,MAAMF,IAAII,SAC/BI,QAAQC,IAAIL,GACZI,QAAQC,IAAI,qBAcZ,IAAId,EAAOK,EAAIG,IAAIC,GACnBI,QAAQC,IAAI,WAAYd,GACxB,IAAI6E,QAAclB,EAAY3D,GAM9B,OALAa,QAAQC,IAAI,QAAS+D,GAErBxE,EAAIG,IAAIC,GAAUqE,MAAMC,IACtBlE,QAAQC,IAAI,MAAOiE,MAEdF,GAmFX1E,EAAI+D,OAAOC,iBAAiBa,WAAa/D,eAAelB,GACpDc,QAAQC,IAAI,QAAS4C,EAAMnD,MAAMF,IAAImE,OACrC,IAAIS,EAAavB,EAAMnD,MAAMF,IAAImE,MAAMjF,KACvCsB,QAAQC,IAAIf,EAAMA,EAAKmF,MAAOnF,EAAKoF,QACnC,IAAIvC,EAAS7C,EAAKoF,OAAOvC,cAClBA,EAAOwC,cACPxC,EAAOyC,WACd,IAAIC,EAAcjF,EAAIG,IAAIyE,GAAYP,IAAI9B,GAEtC2C,EAAUxF,EAAKoF,OAAOI,eACnBA,EAAQH,cACRG,EAAQF,WAEf,IAAIzE,EAAMb,EAAKoF,OAAOK,KAAKC,MAC3BF,EAAQ3E,GAAO0E,EAGfzE,QAAQC,IAAIyE,GAEdlF,EAAIG,IAAIyE,GAAYP,IAAIa,MAsCN,qBAAXG,QAA0BA,OAAOC,KAC1CD,OAAOC,IAAIC,IAAIrC,GAGjB,QCxOO,MAAMlD,EAAMwF,IAAI,CACrBC,MAAO,CAAC,kCAER,2CAEFC,cAAa,IAEblF,QAAQC,IAAIkF,IAAK3F,GAIjB,MAAMF,GAAM8F,EAAAA,EAAAA,IAAUC,GACtB/F,EAAIyF,IAAIO,EAAW,CAACzC,MAAOA,EAAOrD,IAAKA,IACvCF,EAAIyF,IAAIlC,GAAO0C,MAAM,UC3BjBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa5H,QAGrB,IAAID,EAAS0H,EAAyBE,GAAY,CACjD7H,GAAI6H,EACJG,QAAQ,EACR9H,QAAS,IAUV,OANA+H,EAAoBJ,GAAU5H,EAAQA,EAAOC,QAAS0H,GAGtD3H,EAAO+H,QAAS,EAGT/H,EAAOC,QAIf0H,EAAoBM,EAAID,E,WC5BxB,IAAIE,EAAW,GACfP,EAAoBQ,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASS,OAAQD,IAAK,CACrCL,EAAWH,EAASQ,GAAG,GACvBJ,EAAKJ,EAASQ,GAAG,GACjBH,EAAWL,EAASQ,GAAG,GAE3B,IAJA,IAGIE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAapE,OAAOtE,KAAK8H,EAAoBQ,GAAGW,OAAM,SAAS7G,GAAO,OAAO0F,EAAoBQ,EAAElG,GAAKoG,EAASQ,OAC3JR,EAASU,OAAOF,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbV,EAASa,OAAOL,IAAK,GACrB,IAAIpE,EAAIgE,SACER,IAANxD,IAAiB8D,EAAS9D,IAGhC,OAAO8D,EAzBNG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASS,OAAQD,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,I,cCJ/BZ,EAAoB1C,EAAI,SAASjF,GAChC,IAAIgJ,EAAShJ,GAAUA,EAAOiJ,WAC7B,WAAa,OAAOjJ,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADA2H,EAAoBuB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,G,cCLRrB,EAAoBuB,EAAI,SAASjJ,EAASmJ,GACzC,IAAI,IAAInH,KAAOmH,EACXzB,EAAoB0B,EAAED,EAAYnH,KAAS0F,EAAoB0B,EAAEpJ,EAASgC,IAC5EkC,OAAOmF,eAAerJ,EAASgC,EAAK,CAAEsH,YAAY,EAAM1H,IAAKuH,EAAWnH,M,cCJ3E0F,EAAoB/D,EAAI,WACvB,GAA0B,kBAAf4F,WAAyB,OAAOA,WAC3C,IACC,OAAO/H,MAAQ,IAAIgI,SAAS,cAAb,GACd,MAAO/J,GACR,GAAsB,kBAAXqH,OAAqB,OAAOA,QALjB,G,cCAxBY,EAAoB0B,EAAI,SAASK,EAAKC,GAAQ,OAAOxF,OAAOyF,UAAUC,eAAeC,KAAKJ,EAAKC,I,cCA/FhC,EAAoBoC,IAAM,SAAS/J,GAGlC,OAFAA,EAAOgK,MAAQ,GACVhK,EAAOiK,WAAUjK,EAAOiK,SAAW,IACjCjK,G,cCER,IAAIkK,EAAkB,CACrB,IAAK,GAaNvC,EAAoBQ,EAAEU,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4BjJ,GAC/D,IAKIwG,EAAUuC,EALV9B,EAAWjH,EAAK,GAChBkJ,EAAclJ,EAAK,GACnBmJ,EAAUnJ,EAAK,GAGIsH,EAAI,EAC3B,GAAGL,EAASmC,MAAK,SAASzK,GAAM,OAA+B,IAAxBmK,EAAgBnK,MAAe,CACrE,IAAI6H,KAAY0C,EACZ3C,EAAoB0B,EAAEiB,EAAa1C,KACrCD,EAAoBM,EAAEL,GAAY0C,EAAY1C,IAGhD,GAAG2C,EAAS,IAAInC,EAASmC,EAAQ5C,GAGlC,IADG0C,GAA4BA,EAA2BjJ,GACrDsH,EAAIL,EAASM,OAAQD,IACzByB,EAAU9B,EAASK,GAChBf,EAAoB0B,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxC,EAAoBQ,EAAEC,IAG1BqC,EAAqBC,KAAK,uBAAyBA,KAAK,wBAA0B,GACtFD,EAAmBE,QAAQP,EAAqBQ,KAAK,KAAM,IAC3DH,EAAmBrI,KAAOgI,EAAqBQ,KAAK,KAAMH,EAAmBrI,KAAKwI,KAAKH,I,GC/CvF,IAAII,EAAsBlD,EAAoBQ,OAAEL,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,SAC1GkD,EAAsBlD,EAAoBQ,EAAE0C,I","sources":["webpack://gunmind/./node_modules/gun/ sync","webpack://gunmind/./src/App.vue","webpack://gunmind/./src/components/HelloWorld.vue","webpack://gunmind/./src/components/HelloWorld.vue?bd04","webpack://gunmind/./src/App.vue?7ccd","webpack://gunmind/./src/registerServiceWorker.js","webpack://gunmind/./src/store/modules/gun.js","webpack://gunmind/./src/store/index.js","webpack://gunmind/./src/plugins/gun-plugin.js","webpack://gunmind/./src/main.js","webpack://gunmind/webpack/bootstrap","webpack://gunmind/webpack/runtime/chunk loaded","webpack://gunmind/webpack/runtime/compat get default export","webpack://gunmind/webpack/runtime/define property getters","webpack://gunmind/webpack/runtime/global","webpack://gunmind/webpack/runtime/hasOwnProperty shorthand","webpack://gunmind/webpack/runtime/node module decorator","webpack://gunmind/webpack/runtime/jsonp chunk loading","webpack://gunmind/webpack/startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1661;\nmodule.exports = webpackEmptyContext;","<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld />\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  created(){\n    // this.$gunListen()\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <div class=\"hello\">\n    <input v-model=\"node.name\" />\n    <button @click=\"save\">Save</button>\n    - {{ brains }} -\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data(){\n    return {\n      node:  {},\n      brains: []\n    }\n  },\n  created(){\n    let app = this\n    let gun = this.$store.state.gun.gun\n     gun.get(this.$store.state.gun.rootNode).map().on(\n      (node, key) =>\n      // store.commit('gun/addGunBrains', {node:node, key: key}\n      {console.log(node, key)\n      app.brains.push(node)}\n\n  )\n},\nmethods: {\n  async save(){\n    let node = { date:Date.now(), name: this.node.name}\n    await this.$saveNodeToGun(node)\n    this.node = {}\n  }\n},\nwatch:{\n  gunBrains(){\n    console.log(this.gunBrains)\n  }\n},\ncomputed: {\n  gunBrains() {\n    return this.$store.state.gun.gunBrains\n  },\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./HelloWorld.vue?vue&type=template&id=6fde766f&scoped=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=6fde766f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/smag/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6fde766f\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=6ebe4cd8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6ebe4cd8&lang=css\"\n\nimport exportComponent from \"/home/smag/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","// import Vue from 'vue'\n\nconst state = () => ({\n  rootNode: \"test-brains\",\n  gunBrains : [],\n  gun: null\n})\n\nconst mutations = {\n  setGun(state, g){\n    state.gun = g\n  },\n  setGunBrains(state, b){\n    state.gunBrains = b\n  },\n  async addGunBrains(state, b){\n  //  console.log(b)\n    const index = state.gunBrains.findIndex(object => object.key == b.key);\n    //console.log(index)\n    if (index === -1) {\n      let br = Object.assign({},b.node)\n      br.key = b.key\n       state.gunBrains.push(br)\n      // await Vue.prototype.$gun.get(b.key).open(async (doc) => {\n      //   console.log(\"doc\",b.key,  doc)\n      //   doc.key = b.key\n      //   await state.gunBrains.push(doc)\n      // })\n\n    }\n    console.log(state.gunBrains)\n\n\n  },\n  setRootNode(state,r){\n    state.rootNode = r\n  }\n  // setPod(state, p){\n  //   console.log(\"pod\",p)\n  //   state.pod = p\n  // },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","import { createStore } from 'vuex'\nimport gun from './modules/gun'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n     gun\n  }\n})\n","// import * as sc from '@inrupt/solid-client-authn-browser'\n// gun JSON https://gist.github.com/rosko/57ab2083ee4adf2f078d4d76851d9dc6\n// import { Dfs } from '@/api/dfs';\n\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n    let gun = opts.gun\n    store.commit('gun/setGun', gun)\n    //  console.log(store)\n\n\n    // Vue.prototype.$gunSearch = async function(/*'brains')*/){\n    //   console.log(Dfs)\n    //   let dfs = new Dfs(Vue.prototype.$gun)\n    //   dfs.search(store.state.gun.rootNode, 'name')\n    // }\n\n    app.config.globalProperties.$gunListen = async function(){\n      // let gunBrains = []\n      console.log(\"Map\",await gun.get(store.state.gun.rootNode).map())\n      await gun.get(store.state.gun.rootNode).map().on(\n        (node, key) => store.commit('gun/addGunBrains', {node:node, key: key})\n      )\n      //   function(node,key) {\n      //   console.log(node,key)\n      //   Vue.prototype.$gun.get(key).open((doc) => {\n      //   //console.log(\"doc\",key,  doc)\n      //   doc.key = key\n      //   gunBrains.push(doc)\n      // //  gunBrains[key] = doc\n      //   console.log(gunBrains)\n      //     store.commit('gun/setGunBrains', gunBrains)\n      //   });\n    }\n\n\n\n    // await Vue.prototype.$gun.get('neurones').map().on(function(node,key) {\n    // //  console.log(node,key)\n    // let gunNeurones = []\n    //   Vue.prototype.$gun.get(key).open((doc) => {\n    //   //console.log(\"doc\",key,  doc)\n    //   doc.key = key\n    //   gunNeurones.push(doc)\n    // //  gunBrains[key] = doc\n    //   console.log(gunNeurones)\n    //     //store.commit('gun/setGunBrains', gunBrains)\n    //   });\n    // })\n\n    // }\n    app.config.globalProperties.$saveBrainToGun = async function(){\n      let path = gun.get(store.state.gun.rootNode).get(store.state.core.brain.key).get('nodes')\n      for await (const n of store.state.core.nodes){\n        delete n['@context']\n        console.error(\"must not be used , use store.rootNode\",n.id, n)\n        path.set(n)\n\n      }\n    }\n\n    app.config.globalProperties.$saveNodeToGun = async function(node){\n      let path = gun.get(store.state.gun.rootNode)\n      path.set(node)\n      //console.log(\"Brain\", store.state.core.brain, store.state.core.galaxy, store.state.core.galaxy.worlds, node)\n      // if (store.state.brain != null){\n      //\n      // }\n\n    }\n\n    app.config.globalProperties.$gunSet = async function(object){\n      console.log(store.state.gun.rootNode, object)\n      gun.get(store.state.gun.rootNode).set(object)\n    }\n\n    app.config.globalProperties.$gunExplore = async function(){\n      // inspiration https://github.com/Stefdv/gun-ui-graph/blob/master/gun-ui-graph.html\n      let rootNode = store.state.gun.rootNode\n      console.log(rootNode)\n      console.log('build gun._.graph')\n      // var self = this\n      // function each(node) {\n      //   console.log(node)\n      //   //self._processGunNode(node)\n      // }\n      // function ended(collection) {\n      //   console.log('Done mapping over:', collection);\n      //   //self._initCy()\n      //\n      //\n      //   self._mapNodes()\n      // }\n\n      let node = gun.get(rootNode)//.valMapEnd(each,ended)\n      console.log(\"Gun Node\", node)\n      let graph = await processNode(node)\n      console.log(\"graph\", graph)\n    //  console.log(Vue.prototype.$gun)\n      gun.get(rootNode).open((doc) => {\n        console.log(\"doc\", doc)\n      });\n      return graph\n\n    }\n    async function processNode(n){\n      let gunNodes = []\n      var soul = n._['#'];\n      console.log(\"soul\", soul)\n      n.map().once((node) => {\n        //console.log(key, node)\n        gunNodes.push(node)\n        // add results straight to the Vue component state\n        // and get updates when nodes are updated by GUN\n        // this.todos[key] = node;\n        //  console.log(this.todos)\n      });\n      //let isSet = await _isSet(soul)\n      //console.log(isSet)\n      // console.log(gunNodes)\n      return gunNodes\n    }\n\n\n    // Vue.prototype.$createBrain = async function(brain){\n    //\n    //   console.log(\"creation\",brain)\n    //   let brains = []\n    //   let rootNode = null\n    //   switch (brain.world) {\n    //     case \"gun\":\n    //     if (brain.privacy == \"user\"){\n    //       rootNode = Vue.prototype.$gun.user().get('brains')\n    //     }else {\n    //       rootNode = Vue.prototype.$gun.get('brains')\n    //     }\n    //\n    //\n    //\n    //     rootNode.map().on((node, key) => {\n    //       console.log(key, node)\n    //       brains.push({key: key, node: node})\n    //       // add results straight to the Vue component state\n    //       // and get updates when nodes are updated by GUN\n    //       // this.todos[key] = node;\n    //       //  console.log(this.todos)\n    //     });\n    //\n    //     rootNode.set({name: brain.name, created: Date.now(), type: brain.type})\n    //\n    //\n    //     brain.brains = brains\n    //     console.log(\"brains\",brain.brains)\n    //\n    //\n    //\n    //     break;\n    //     default:\n    //     console.log(\"todo\")\n    //   }\n    //\n    //   //store.commit('app/setBrain', brain)\n    //   return brain\n    // }\n\n    // Vue.prototype.$gunGet = async function(brain){\n    //   let gunNodes = []\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     gunNodes.push({key: key, node: node})\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(gunNodes)\n    //   brain.gunNodes = gunNodes\n    //   console.log(brain)\n    //   store.commit('app/setBrain', brain)\n    //   //  Vue.prototype.$listenNeurones(brain)\n    //   return brain\n    // }\n\n\n\n  app.config.globalProperties.$saveToGun = async function(data){\n      console.log(\"brain\", store.state.gun.brain)\n      let brain_name = store.state.gun.brain.name\n      console.log(data, data.value, data.triple)\n      let object = data.triple.object\n      delete object.__ob__\n      delete object.__threeObj\n      let objectNode  = gun.get(brain_name).set(object)\n\n      let subject = data.triple.subject\n      delete subject.__ob__\n      delete subject.__threeObj\n\n      let key = data.triple.edge.label\n      subject[key] = objectNode\n\n\n      console.log(subject)\n\n    gun.get(brain_name).set(subject)\n\n    }\n\n    // Vue.prototype.$listenNeurones = async function(brain){\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(\"ready to hear neurones\")\n    // }\n\n\n\n\n    // async function _isSet(ref){\n    //   Vue.prototype.$gun.get(ref).once(function(node){\n    //     let set = true\n    //     let iterated = false\n    //     console.log(node)\n    //     // Vue.prototype.$gun.node.is(node, function(value, field){\n    //     //   console.log(field)\n    //     //   iterated = true\n    //     //   if(!Vue.prototype.$gun.val.rel.is(value)){\n    //     //     set = false\n    //     //   }\n    //     // })\n    //     return {set: set, iterated: iterated}\n    //   })\n    // }\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport store from './store'\n\nimport Gun from 'gun/gun'\nimport SEA from 'gun/sea.js'\nimport 'gun/lib/radix'\nimport 'gun/lib/radisk'\nimport 'gun/lib/store'\nimport 'gun/lib/rindexed'\nimport 'gun/lib/webrtc'\nimport 'gun/nts'\n\n\nexport const gun = Gun({\n  peers: ['https://spogg.herokuapp.com/gun',\n  /*'http://localhost:9090/gun',*/\n  'https://gun-manhattan.herokuapp.com/gun'\n/*, 'http://gunjs.herokuapp.com/gun/'*/],// run gun-starter-app on port 9090,\nlocalStorage:false\n})\nconsole.log(SEA, gun)\n\nimport GunPlugin from './plugins/gun-plugin';\n\nconst app = createApp(App)\napp.use(GunPlugin, {store: store, gun: gun});\napp.use(store).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgunmind\"] = self[\"webpackChunkgunmind\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9270); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","_createElementVNode","alt","src","_imports_0","_hoisted_1","_createVNode","_component_HelloWorld","class","_createElementBlock","$data","name","$event","onClick","$options","_toDisplayString","props","msg","String","data","node","brains","created","app","this","gun","$store","state","get","rootNode","map","on","key","console","log","push","methods","async","date","Date","now","$saveNodeToGun","watch","gunBrains","computed","__exports__","components","HelloWorld","render","register","ready","registered","cached","updatefound","updated","offline","error","mutations","setGun","g","setGunBrains","b","index","findIndex","object","br","Object","assign","setRootNode","r","actions","namespaced","createStore","getters","modules","plugin","install","opts","store","processNode","n","gunNodes","soul","_","once","commit","config","globalProperties","$gunListen","$saveBrainToGun","path","core","brain","nodes","set","$gunSet","$gunExplore","graph","open","doc","$saveToGun","brain_name","value","triple","__ob__","__threeObj","objectNode","subject","edge","label","window","Vue","use","Gun","peers","localStorage","SEA","createApp","App","GunPlugin","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","splice","getter","__esModule","d","a","definition","o","defineProperty","enumerable","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}