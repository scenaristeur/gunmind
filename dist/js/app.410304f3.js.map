{"version":3,"file":"js/app.410304f3.js","mappings":"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","sources":["webpack://gunmind/./node_modules/gun/ sync","webpack://gunmind/./src/App.vue","webpack://gunmind/./src/components/HelloWorld.vue","webpack://gunmind/./src/components/BrainView.vue","webpack://gunmind/./src/components/BrainView.vue?81d6","webpack://gunmind/./src/components/HelloWorld.vue?bd04","webpack://gunmind/./src/App.vue?7ccd","webpack://gunmind/./src/store/modules/gun.js","webpack://gunmind/./src/store/index.js","webpack://gunmind/./src/plugins/gun-plugin.js","webpack://gunmind/./src/main.js","webpack://gunmind/webpack/bootstrap","webpack://gunmind/webpack/runtime/chunk loaded","webpack://gunmind/webpack/runtime/compat get default export","webpack://gunmind/webpack/runtime/define property getters","webpack://gunmind/webpack/runtime/global","webpack://gunmind/webpack/runtime/hasOwnProperty shorthand","webpack://gunmind/webpack/runtime/make namespace object","webpack://gunmind/webpack/runtime/node module decorator","webpack://gunmind/webpack/runtime/jsonp chunk loading","webpack://gunmind/webpack/startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1661;\nmodule.exports = webpackEmptyContext;","<template>\n  <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n  <HelloWorld />\n</template>\n\n<script>\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  created(){\n    // this.$gunListen()\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <b-container>\n    <b-row>\n\n      <b-col cols=\"12\" md=\"9\" >\n        <b-form-input v-model=\"root\" placeholder=\"workspace\" />\n      </b-col>\n      <b-col cols=\"12\" md=\"3\" >\n        <b-button @click=\"updateRootNode\" variant=\"info\">Change</b-button>\n\n        <b-button\n        variant=\"info\"\n        @click=\"resetRootNode\" >\n        Default\n      </b-button>\n    </b-col>\n  </b-row>\n  <b-row>\n    <b-col cols=\"12\" md=\"9\" >\n      <b-form-input\n      v-model=\"node.name\"\n      placeholder=\"Brain name\"\n      ></b-form-input>\n      <b-form-input\n      v-model=\"node.description\"\n      placeholder=\"Brain description\"\n      ></b-form-input>\n    </b-col>\n    <b-col cols=\"12\" md=\"3\" >\n      <b-button\n      variant=\"info\"\n      @click=\"save\">\n      Add Brain\n    </b-button>\n  </b-col>\n</b-row>\n\n<b-tabs content-class=\"mt-3\">\n\n  <b-tab title=\"Workspaces\">\n    <p>Workspaces</p>\n    <b-list-group>\n      <BrainView v-for=\"(brain,i) in Object.values(brains).slice().reverse()\" :key=\"i\" :brain=\"brain\" />\n    </b-list-group>\n  </b-tab>\n\n  <b-tab v-for=\"a in actives\" :key=\"a\" :title=\"gunBrains[a].name\">\n    <b-button @click=\"toggleActive(a)\" size=\"sm\">close</b-button>\n    <p>{{gunBrains[a]}}</p>\n\n  </b-tab>\n  <!-- <ActivesView /> -->\n\n  <!-- {{Object.values(brains)}} -->\n  <!-- <b-row>\n  <b-table\n  :items=\"Object.values(brains)\"\n  selectable\n  @row-selected=\"onRowSelected\"\n  @event=\"\">\n</b-table>\n\n</b-row> -->\n\n\n\n\n</b-tabs>\n\nworkspaces boot\n\n</b-container>\n</template>\n\n<script>\nimport BrainView from '@/components/BrainView.vue'\nimport { v4 as uuidv4 } from 'uuid';\n// import ActivesView from '@/components/ActivesView.vue'\n\nexport default {\n  name: 'HelloWorld',\n  components: {\n    BrainView,\n    // ActivesView\n  },\n  data(){\n    return {\n      node:  {},\n      brains: {},\n      root : this.$store.state.gun.rootNode,\n\n    }\n  },\n  created(){\n    this.listen()\n  },\n  methods: {\n    resetRootNode(){\n      this.$store.commit('gun/setRootNode', \"test-brains\")\n    },\n    updateRootNode(){\n      this.$store.commit('gun/setRootNode', this.root)\n      this.brains = {}\n    },\n    listen(){\n      console.log(\"listen\", this.root)\n      let app = this\n      let gun = this.$store.state.gun.gun\n      gun.get(this.root).map().on(\n        async function(node,key){app.update(node,key) }\n        // let n = JSON.parse(JSON.stringify(node))\n        // app.$store.commit('gun/updateBrain', {key:key, node:n})\n        //  }\n      )\n    },\n    async update(node,key){\n      console.log(key, node)\n      if (node != null){\n        this.brains[key] = node\n        this.$store.commit('gun/setGunBrains', this.brains)\n      }\n\n      //console.log(this.brains[key].date)\n\n      // let brainArray = []\n      // for (const [key, node] of Object.entries(this.brains)) {\n      //   console.log(key, node);\n      //   node.key = key\n      //   brainArray.push(node)\n      // }\n      // brainArray.sort((a, b) => {\n      //   console.log(a.date, b.date)\n      //     return b.date - a.date;\n      // });\n      //       let brainArray = Object.entries(this.brains).map((key, node) => {\n      //         node.key = key\n      //         return node\n      //       })\n      // console.log(brainArray)\n\n\n      //console.log(this.brains)\n      // let brains = JSON.parse(JSON.stringify(this.brains))\n      // // console.log(node,key)\n      // // async function(node, key)\n      // // // store.commit('gun/addGunBrains', {node:node, key: key}\n      // // {\n      //   //  console.log(node, key)\n      //   // let brains = JSON.parse(JSON.stringify(this.brains))\n      //   console.log(brains)\n      // let n = JSON.parse(JSON.stringify(node['_']['>'])) //Object.assign({},node['_']['>'])\n      // n.id = key\n      // console.log(n)\n      // let index = this.brains.findIndex(x => {x.id == key})\n      // console.log(index, this.brains.length)\n      // if (index == -1){\n      //   this.brains[key] = n\n      // }\n      //else{\n      //   brains[index] = n\n      // }\n      // this.brains = brains\n\n      // }\n    },\n    async save(){\n\n      let node = { id: this.node.id || uuidv4(), date:Date.now(), name: this.node.name, description: this.node.description}\n      await this.$saveNodeToGun(node)\n      this.node = {}\n    },\n    onSelected(r){\n      console.log(r)\n    },\n    toggleActive(id){\n      this.$store.commit('gun/toggleActive', id)\n    }\n  },\n  watch:{\n    // selectedItem(){\n    //   console.log(\"selected\", this.selectedItem)\n    // },\n    // brains(){\n    //   console.log(this.brains)\n    //   this.$store.commit('gun/setGunBrains', this.brains)\n    // },\n    rootNode(){\n      this.root = this.rootNode\n      this.listen()\n    }\n  },\n  computed: {\n    // gunBrains() {\n    //   return this.$store.state.gun.gunBrains\n    // },\n    rootNode(){\n      return this.$store.state.gun.rootNode\n    },\n    actives() {\n      return this.$store.state.gun.actives\n    },\n    gunBrains() {\n      return this.$store.state.gun.gunBrains\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <b-list-group-item button :variant=\"actives.includes(id) ? 'info' : 'light'\" @click=\"onSelected\">\n    <!-- {{actives.includes(id)}} -->\n    {{brain.name}} , <small><i>{{new Date(brain.date).toLocaleString()}} </i></small>\n    <small><i>{{brain}}</i></small>\n    <b-button @click.stop=\"deleteBrain\">Delete</b-button>\n  </b-list-group-item>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'BrainView',\n  props: {\n    brain: Object\n  },\n  data(){\n    return {\n      id : null\n    }\n  },\n  // components: {\n  //   HelloWorld\n  // },\n  created(){\n    // this.$gunListen()\n  },\n  methods:{\n    onSelected(){\n      console.log(this.brain['_']['#'], this.brain.name)\n      this.id = this.brain['_']['#']\n      this.$store.commit('gun/toggleActive', this.brain['_']['#'])\n    },\n    deleteBrain(){\n      this.$store.commit('gun/deleteBrain', this.brain)\n    }\n  },\n  computed: {\n    actives() {\n      return this.$store.state.gun.actives\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./BrainView.vue?vue&type=template&id=be0fd3f6\"\nimport script from \"./BrainView.vue?vue&type=script&lang=js\"\nexport * from \"./BrainView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/smag/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HelloWorld.vue?vue&type=template&id=7724d199&scoped=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=7724d199&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/smag/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7724d199\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2f2b50ad\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2f2b50ad&lang=css\"\n\nimport exportComponent from \"/home/smag/dev/gunmind/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import Vue from 'vue'\n\nconst state = () => ({\n  rootNode: \"test-brains1\",\n  gunBrains : [],\n  gun: null,\n  actives: []\n})\n\nconst mutations = {\n  setGun(state, g){\n    state.gun = g\n  },\n  updateBrain(state,g){\n    state.gunBrains[g.key] =  g.node\n    console.log(state.gunBrains)\n  },\n  toggleActive(state,b){\n    //  console.log(b)\n    state.actives.includes(b) ? state.actives = state.actives.filter(a => {return a!=b}) : state.actives.push(b)\n    //  console.log(state.actives)\n  },\n  setGunBrains(state, b){\n     //console.log(b)\n    state.gunBrains = b\n  },\n  // deleteBrain(state, b){\n  //   let root = state.gun.get(state.rootNode)\n  //   console.log(root,b)\n  //   state.gun.get(state.rootNode).get(b['_']['#']).put(null)\n  // },\n  deleteBrain(state, b){\n    console.log(b)\n    state.gun.get(state.rootNode).get(b['_']).put(null)\n  },\n  // async addGunBrains(state, b){\n  // //  console.log(b)\n  //   const index = state.gunBrains.findIndex(object => object.key == b.key);\n  //   //console.log(index)\n  //   if (index === -1) {\n  //     let br = Object.assign({},b.node)\n  //     br.key = b.key\n  //      state.gunBrains.push(br)\n  //     // await Vue.prototype.$gun.get(b.key).open(async (doc) => {\n  //     //   console.log(\"doc\",b.key,  doc)\n  //     //   doc.key = b.key\n  //     //   await state.gunBrains.push(doc)\n  //     // })\n  //\n  //   }\n  //   console.log(state.gunBrains)\n  //\n  //\n  // },\n  setRootNode(state,r){\n    state.rootNode = r\n  }\n  // setPod(state, p){\n  //   console.log(\"pod\",p)\n  //   state.pod = p\n  // },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","import { createStore } from 'vuex'\nimport gun from './modules/gun'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n     gun\n  }\n})\n","// import * as sc from '@inrupt/solid-client-authn-browser'\n// gun JSON https://gist.github.com/rosko/57ab2083ee4adf2f078d4d76851d9dc6\n// import { Dfs } from '@/api/dfs';\n\nconst plugin = {\n  install(app, opts = {}) {\n    let store = opts.store\n    let gun = opts.gun\n    store.commit('gun/setGun', gun)\n    //  console.log(store)\n\n\n    // Vue.prototype.$gunSearch = async function(/*'brains')*/){\n    //   console.log(Dfs)\n    //   let dfs = new Dfs(Vue.prototype.$gun)\n    //   dfs.search(store.state.gun.rootNode, 'name')\n    // }\n\n    app.config.globalProperties.$gunListen = async function(){\n      // let gunBrains = []\n      console.log(\"Map\",await gun.get(store.state.gun.rootNode).map())\n      await gun.get(store.state.gun.rootNode).map().on(\n        (node, key) => store.commit('gun/addGunBrains', {node:node, key: key})\n      )\n      //   function(node,key) {\n      //   console.log(node,key)\n      //   Vue.prototype.$gun.get(key).open((doc) => {\n      //   //console.log(\"doc\",key,  doc)\n      //   doc.key = key\n      //   gunBrains.push(doc)\n      // //  gunBrains[key] = doc\n      //   console.log(gunBrains)\n      //     store.commit('gun/setGunBrains', gunBrains)\n      //   });\n    }\n\n\n\n    // await Vue.prototype.$gun.get('neurones').map().on(function(node,key) {\n    // //  console.log(node,key)\n    // let gunNeurones = []\n    //   Vue.prototype.$gun.get(key).open((doc) => {\n    //   //console.log(\"doc\",key,  doc)\n    //   doc.key = key\n    //   gunNeurones.push(doc)\n    // //  gunBrains[key] = doc\n    //   console.log(gunNeurones)\n    //     //store.commit('gun/setGunBrains', gunBrains)\n    //   });\n    // })\n\n    // }\n    app.config.globalProperties.$saveBrainToGun = async function(){\n      let path = gun.get(store.state.gun.rootNode).get(store.state.core.brain.key).get('nodes')\n      for await (const n of store.state.core.nodes){\n        delete n['@context']\n        console.error(\"must not be used , use store.rootNode\",n.id, n)\n        path.set(n)\n\n      }\n    }\n\n    app.config.globalProperties.$saveNodeToGun = async function(node){\n      console.log(store.state.gun.rootNode, node)\n      let path = gun.get(store.state.gun.rootNode).get(node.id)\n      path.set(node)\n      //console.log(\"Brain\", store.state.core.brain, store.state.core.galaxy, store.state.core.galaxy.worlds, node)\n      // if (store.state.brain != null){\n      //\n      // }\n\n    }\n\n    app.config.globalProperties.$gunSet = async function(object){\n      console.log(store.state.gun.rootNode, object)\n      gun.get(store.state.gun.rootNode).set(object)\n    }\n\n    app.config.globalProperties.$gunExplore = async function(){\n      // inspiration https://github.com/Stefdv/gun-ui-graph/blob/master/gun-ui-graph.html\n      let rootNode = store.state.gun.rootNode\n      console.log(rootNode)\n      console.log('build gun._.graph')\n      // var self = this\n      // function each(node) {\n      //   console.log(node)\n      //   //self._processGunNode(node)\n      // }\n      // function ended(collection) {\n      //   console.log('Done mapping over:', collection);\n      //   //self._initCy()\n      //\n      //\n      //   self._mapNodes()\n      // }\n\n      let node = gun.get(rootNode)//.valMapEnd(each,ended)\n      console.log(\"Gun Node\", node)\n      let graph = await processNode(node)\n      console.log(\"graph\", graph)\n    //  console.log(Vue.prototype.$gun)\n      gun.get(rootNode).open((doc) => {\n        console.log(\"doc\", doc)\n      });\n      return graph\n\n    }\n    async function processNode(n){\n      let gunNodes = []\n      var soul = n._['#'];\n      console.log(\"soul\", soul)\n      n.map().once((node) => {\n        //console.log(key, node)\n        gunNodes.push(node)\n        // add results straight to the Vue component state\n        // and get updates when nodes are updated by GUN\n        // this.todos[key] = node;\n        //  console.log(this.todos)\n      });\n      //let isSet = await _isSet(soul)\n      //console.log(isSet)\n      // console.log(gunNodes)\n      return gunNodes\n    }\n\n\n    // Vue.prototype.$createBrain = async function(brain){\n    //\n    //   console.log(\"creation\",brain)\n    //   let brains = []\n    //   let rootNode = null\n    //   switch (brain.world) {\n    //     case \"gun\":\n    //     if (brain.privacy == \"user\"){\n    //       rootNode = Vue.prototype.$gun.user().get('brains')\n    //     }else {\n    //       rootNode = Vue.prototype.$gun.get('brains')\n    //     }\n    //\n    //\n    //\n    //     rootNode.map().on((node, key) => {\n    //       console.log(key, node)\n    //       brains.push({key: key, node: node})\n    //       // add results straight to the Vue component state\n    //       // and get updates when nodes are updated by GUN\n    //       // this.todos[key] = node;\n    //       //  console.log(this.todos)\n    //     });\n    //\n    //     rootNode.set({name: brain.name, created: Date.now(), type: brain.type})\n    //\n    //\n    //     brain.brains = brains\n    //     console.log(\"brains\",brain.brains)\n    //\n    //\n    //\n    //     break;\n    //     default:\n    //     console.log(\"todo\")\n    //   }\n    //\n    //   //store.commit('app/setBrain', brain)\n    //   return brain\n    // }\n\n    // Vue.prototype.$gunGet = async function(brain){\n    //   let gunNodes = []\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     gunNodes.push({key: key, node: node})\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(gunNodes)\n    //   brain.gunNodes = gunNodes\n    //   console.log(brain)\n    //   store.commit('app/setBrain', brain)\n    //   //  Vue.prototype.$listenNeurones(brain)\n    //   return brain\n    // }\n\n\n\n  app.config.globalProperties.$saveToGun = async function(data){\n      console.log(\"brain\", store.state.gun.brain)\n      let brain_name = store.state.gun.brain.name\n      console.log(data, data.value, data.triple)\n      let object = data.triple.object\n      delete object.__ob__\n      delete object.__threeObj\n      let objectNode  = gun.get(brain_name).set(object)\n\n      let subject = data.triple.subject\n      delete subject.__ob__\n      delete subject.__threeObj\n\n      let key = data.triple.edge.label\n      subject[key] = objectNode\n\n\n      console.log(subject)\n\n    gun.get(brain_name).set(subject)\n\n    }\n\n    // Vue.prototype.$listenNeurones = async function(brain){\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(\"ready to hear neurones\")\n    // }\n\n\n\n\n    // async function _isSet(ref){\n    //   Vue.prototype.$gun.get(ref).once(function(node){\n    //     let set = true\n    //     let iterated = false\n    //     console.log(node)\n    //     // Vue.prototype.$gun.node.is(node, function(value, field){\n    //     //   console.log(field)\n    //     //   iterated = true\n    //     //   if(!Vue.prototype.$gun.val.rel.is(value)){\n    //     //     set = false\n    //     //   }\n    //     // })\n    //     return {set: set, iterated: iterated}\n    //   })\n    // }\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import { createApp } from 'vue'\nimport App from './App.vue'\n//import './registerServiceWorker'\nimport BootstrapVue3 from 'bootstrap-vue-3'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue-3/dist/bootstrap-vue-3.css'\nimport store from './store'\n\nimport Gun from 'gun/gun'\nimport SEA from 'gun/sea.js'\nimport 'gun/lib/radix'\nimport 'gun/lib/radisk'\nimport 'gun/lib/store'\nimport 'gun/lib/rindexed'\nimport 'gun/lib/webrtc'\nimport 'gun/nts'\n\n\n\nlet peers = process.env.NODE_ENV === 'development' ? ['http://localhost:8090/gun'] : [\n  'https://spogg.herokuapp.com/gun',\n  'https://gun-manhattan.herokuapp.com/gun',\n  // 'http://gunjs.herokuapp.com/gun/'\n]\n\nconsole.log(process.env.NODE_ENV, \"peers\", peers)\nexport const gun = Gun({\n  peers: peers,// run gun-starter-app on port 9090,\n  localStorage:false\n})\nconsole.log(SEA, gun)\n\nimport GunPlugin from './plugins/gun-plugin';\n\nconst app = createApp(App)\napp.use(GunPlugin, {store: store, gun: gun});\napp.use(store)\napp.use(BootstrapVue3)\n.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgunmind\"] = self[\"webpackChunkgunmind\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1291); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","_createBlock","_component_HelloWorld","_createElementVNode","_component_b_container","_createVNode","_component_b_row","_component_b_col","cols","md","_component_b_form_input","$data","$event","placeholder","_component_b_button","onClick","$options","variant","name","description","_component_b_tabs","_component_b_tab","title","_hoisted_4","_component_b_list_group","_createElementBlock","_Fragment","_renderList","Object","values","slice","reverse","brain","i","_component_BrainView","key","a","size","_toDisplayString","_component_b_list_group_item","button","includes","$props","Date","date","toLocaleString","props","data","created","methods","onSelected","console","log","this","$store","commit","deleteBrain","computed","actives","state","gun","__exports__","components","BrainView","node","brains","root","rootNode","listen","resetRootNode","updateRootNode","app","get","map","on","async","update","uuidv4","now","$saveNodeToGun","r","toggleActive","watch","gunBrains","HelloWorld","render","mutations","setGun","g","updateBrain","b","filter","push","setGunBrains","put","setRootNode","actions","namespaced","createStore","getters","modules","plugin","install","opts","store","processNode","n","gunNodes","soul","_","once","config","globalProperties","$gunListen","$saveBrainToGun","path","core","nodes","error","set","$gunSet","object","$gunExplore","graph","open","doc","$saveToGun","brain_name","value","triple","__ob__","__threeObj","objectNode","subject","edge","label","window","Vue","use","peers","process","Gun","localStorage","SEA","createApp","App","GunPlugin","BootstrapVue3","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","every","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}